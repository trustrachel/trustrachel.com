<html><body><p>Once upon a time, there was a very old (but production-critical) site I needed to burn down in place. One idea I explored was using the legacy site as a template source for Django. 


As you probably know, Django has <a href="https://docs.djangoproject.com/en/dev/topics/templates/#template-inheritance">template inheritance</a>. If you're not familiar with it, go read that link, there's a great introduction there. When you extend a template, you declare that template as a string:



<code>{% extends "base.html" %}



{% block content %}

blah blah blah blah blah

{% endblock %}</code>



The default Django <a href="https://docs.djangoproject.com/en/dev/ref/templates/api/#loading-templates">template loader</a> is filesystem based - it has a list of template directories and tries to find a file called "base.html" in each of them.  



For this project, I created a custom template loader that checked if a template name existed locally, and if not, tried to load it as a URL from a remote host. On the legacy side, I coaxed our ancient template system into outputting Django blocks around everything important. This let me "import" the old site:



<code>{% extends "/cgi/bin/blarg/foo" %}



{% block content %}

blah blah blah blah blah

{% endblock %}</code>



Crazeballs, but it worked, it was easy, and I didn't write much code to do it. Django's caching made it remarkably quick, too. I loved that I could pull down the legacy site, div by div, and only change what I needed to.



In the end, this was nixed because the company was moving to Drupal and didn't want another stack. (Also: a little too experimental.) However, I was very pleased at how easy Django made this. 



</p><h3>Why the hell would you want to use Flask?</h3></body></html>